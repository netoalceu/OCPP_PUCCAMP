
docker run -it -d \
    --name=qos \
    --network=net_cpo \
    --volume evse_log:/app/log \
    --cap-add=NET_ADMIN \
    ubuntu:latest /bin/bash


=======================================================================================================
comando para Criar a imagem infra com o dockerfile
docker build -t netoalceu/infra:1.1 .


Comando para criar as redes Bridges (como é uma bridge, esta na mesma faixa de ip)
docker network create --driver=bridge --subnet=192.168.10.0/24 --ip-range=192.168.10.0/24 --gateway=192.168.10.254 net_cpo
docker network create --driver=bridge --subnet=192.168.20.0/24 --ip-range=192.168.20.0/24 --gateway=192.168.20.254 net_evse

comando para criar volumes compartilhados para salvar logs
docker volume create ocpp_log

diretorio de referencia do volume no container:
ocpp_log:/app/log

comando p criar o container qos
docker run -it -d \
    --name=qos \
    --network=net_cpo \
    --vol ocpp_log:/app/log \
    --cap-add=NET_ADMIN \
    netoalceu/infra:1.0 /bin/bash

docker network connect net_evse qos
docker cp ~/workspace/infra/slow.sh qos:/usr/local/sbin/

Provavel estrutura de rede de qos:
net_cpo     eth0    192.168.10.1    192.168.10.0    /24   
net_evse    eth1    192.168.20.1    192.168.20.0    /24

comando p criar o container cpo
docker run -it -d \
    --name=cpo \
    --network=net_cpo \
    --volume ocpp_log:/app/log \
    --cap-add=NET_ADMIN \
    netoalceu/infra:1.0 /bin/bash

route add default gw 192.168.10.1
route del default gw 192.168.10.254

comando p criar o container evse
docker run -it -d \
    --name=evse \
    --network=net_evse \ 
    --volume evse_log:/app/log \
    --cap-add=NET_ADMIN \
    netoalceu/infra:1.0 /bin/bash

route add default gw 192.168.20.1
route del default gw 192.168.20.254



Referencias NETEM para documentação:
https://wiki.linuxfoundation.org/networking/netem
https://netbeez.net/blog/how-to-use-the-linux-traffic-control/


Comando de teste NETEM
Ativa Delay
tc qdisc add dev br-535e40d88071 root netem delay 100ms

Desativa NETEM
tc qdisc del dev br-535e40d88071 root

Verifica as regras implementadas 
tc qdisc show

copiando os arquivos do container para o host
docker cp qos:/tmp/. ~/workspace/infra/resultados/




Passagem de parametros para o EVSE 
CHARGER_URL = 'ws://localhost:9000/'
CP_ID = 'CP_01'
MEASUREMENT_REPLY = 1000

como ler parametros no python
for param in sys.argv:
    print(param)

Como ler Variaveis de ambiente do linux no python
import os
PATH = os.environ['PATH']


=============================================================================================

Variaveis a serem criadas:
export CHARGER_URL="ws://172.17.0.2:9000/"
export QNT_METER=1000
export CP_ID=CP_teste


==============================================================================================
comando p criar o container cpo
docker run -it \
    --name=cpo \
    --volume ocpp_log:/app/log \
    --cap-add=NET_ADMIN \
    netoalceu/ocpp:1.0 /bin/bash


route add default gw 192.168.10.1
route del default gw 192.168.10.254

docker commit --change 'CMD ["python3", "cpo_main.py"]' \
    cpo netoalceu/cpo:1.0

comando p criar o container evse
docker run -it \
    --volume ocpp_log:/app/log \
    --cap-add=NET_ADMIN \
    --env CHARGER_URL="ws://172.17.0.2:9000/" \
    --env QNT_METER=1000 \
    --env CP_ID=CP_0 \
    --workdir /app \
    --rm \
    netoalceu/ocpp:1.0 python3 evse_main.py


route add default gw 192.168.20.1
route del default gw 192.168.20.254
python3 evse_main.py

=====================================
   comando p criar o container qos
=====================================
docker run -it -d \
    --name=qos \
    --network=net_cpo \
    --volume ocpp_log:/tmp \
    --cap-add=NET_ADMIN \
    netoalceu/infra:1.1 /bin/bash
docker network connect net_evse qos



=====================================
   comando p criar o container cpo
=====================================
docker run -it \
    --name=cpo \
    --network=net_cpo \
    --volume ocpp_log:/app/log \
    --cap-add=NET_ADMIN \
    --env ADD_GATEWAY=192.168.10.1 \
    --env DEL_GATEWAY=192.168.10.254 \
    --env OCPP_APP=cpo_main.py \
    --rm \
    netoalceu/ocpp:1.0 /app/start.sh

=====================================
   comando p criar o container evse
=====================================
docker run -it \
    --network=net_evse \
    --volume ocpp_log:/app/log \
    --cap-add=NET_ADMIN \
    --env CP_ID=CP_01 \
    --env QNT_METER=10 \
    --env CHARGER_URL="ws://192.168.10.2:9000/" \
    --workdir /app \
    --rm \
    netoalceu/ocpp:1.0 /bin/bash
    netoalceu/ocpp:1.0 /app/start.sh






Eixo x	Reference	AMPS	GPRS	3G	4G	Vsat    DSL	WI-FI_AG

copiar os resultados:
docker cp qos:/tmp/ /home/alceu/workspace/OCPP_PUCCAMP/resultados/app_docker/$QOS

slow.sh status
tcpdump -i eth0 -w /tmp/dump.pcap
